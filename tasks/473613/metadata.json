{
    "time_to_develop_prompt": "30 -40",
    "programming_language": "C++",
    "task_type": "Completion",
    "difficulty": "3",
    "estimated_skill_requirements": "Data Structure and Algorithms,Language-Specific Features",
    "user_prompt": "Base Code:\n```cpp\n#include <iostream>\n#include <string>\n\n// Definition for a TreeNode in the phylogenetic tree\nstruct TreeNode {\n    std::string name;   // Name of the species\n    std::vector<TreeNode*> children; // Vector of pointers to child nodes\n\n    TreeNode(std::string name) : name(name) {}\n};\n\n// Function to find the nearest common ancestor\nTreeNode* findNearestCommonAncestor(TreeNode* root, const std::string& species1, const std::string& species2) {\n    // Complete this function\n}\n```\n\nPrompt:\nDetermine the nearest common ancestor of two given species in a phylogenetic tree to understand their evolutionary relationship.\n\n- Tree Structure:\n  - Represents evolutionary relationships among species or organisms.\n  - Internal nodes denote hypothetical common ancestors.\n  - Leaves represent current species.\n  - Nodes can have multiple children (more than two).\n\n- An ancestor is any node on the path from a species node to the root of the phylogenetic tree. The nearest common ancestor is the closest shared ancestor of two species in the tree.\n\n- Function Requirements: Complete the provided function to achieve the above objectives. Below are the function details:\n  1. Input: A root node, two species (`species1` and `species2`).\n  2. Output: The nearest common ancestor node of the two species.\n  3. Handle edge cases:\n     - Return `nullptr` if either of the species is not present in the tree.\n     - If one of the species is a direct descendant of the other, the function should not return the species itself. Instead, it should return their common ancestor. Example for Edge Case: If `species1` is \"Human\" and `species2` is \"Mammal\", where \"Mammal\" is an ancestor of \"Human\", the function should return the ancestor of \"Mammal\", not \"Mammal\" itself. If \"Mammal\" is the root node, it should return `nullptr`.\n\nProvide the complete code with function implementation, `TreeNode` structure, and necessary imports. Don't provide the main function.\n\n\n\n\n\n\n"
}